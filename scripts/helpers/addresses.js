// # Category
// # 575 records, results must match as close as possible
addresses = {
  "None": 0,

  "–≤—É–ª.": 189,
  "—É–ª.": 2,
  "\n—É–ª.": 41,

  "–≤—É–ª–∏—Ü—è": 2,
  "—É–ª–∏—Ü–∞": 1,

  "–ü—Ä–æ–≤—É–ª–æ–∫": 9,
  "–ü–µ—Ä–µ—É–ª–æ–∫": 8,

  "–ø—Ä–æ–≤.": 5,
  "–ø–µ—Ä.": 2,

  "–í–∞—Ä–≤–∞—Ä–æ–≤–∫–∞": 2,
  "–í–∞—Ä–≤–∞—Ä—ñ–≤–∫–∞": 1,

  "–ü—Ä–æ—Å–ø–µ–∫—Ç": 28,
  "–ø—Ä.": 13,

  "–ü–ª–æ—â–∞": 1,
  "–û—á–∞–∫–æ–≤—Å–∫–∞—è": 6,
  "–ú–æ—Å–∫–æ–≤—Å—å–∫–∞": 1,
  "–û–∑–µ—Ä–Ω–∞": 14,
  "–ö—Ä—ã–ª–æ–≤–∞": 8,
  "–ö–∞–∑–∞—Ä—Å–∫–æ–≥–æ": 2,
  "–ó–∞—Ä–µ—á–Ω–∞—è": 1,

  "[n] —Å–ª–æ–±–æ–¥—Å–∫–∞—è": 0,
  "\nüì´": 0,
}

raw_addresses = 0;
i = 0;
for (k in addresses) {
  i = i + addresses[k];
  raw_addresses++;
}

recs = 575;
in_addresses = 575 - i;

addresses_accuracy = 100 - in_addresses / recs * 100;

console.log('–í—Å—å–æ–≥–æ "—Å–∏—Ä–∏—Ö" –∞–¥—Ä–µ—Å:', raw_addresses);
console.log('–ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—è –º–æ–∂–ª–∏–≤–∞ –¥–ª—è –≤—ñ–¥—Å–æ—Ç–∫—É –∑–∞—è–≤–æ–∫:', Number(addresses_accuracy.toFixed(2)), '%');
